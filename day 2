ll no_of_frames; 
printf("Enter the number of frames "); 
scanf("%lld", &no_of_frames); 
showInputs(virtual_memory_pages, no_of_pages, no_of_frames); 
ll *frame_list = (ll *)malloc(no_of_frames * sizeof(ll)); 
memset(frame_list, -1, no_of_frames * sizeof(ll)); 
ll count_page_hit, count_page_fault; 
count_page_hit = count_page_fault = 0; 
ll last = -1; 
for(int i = 0; i < no_of_pages; i++) 
{ 
if(findPageHit(frame_list, no_of_frames, virtual_memory_pages[i])) 
count_page_hit++; 
else 
{ 
frame_list[++last % no_of_frames] = virtual_memory_pages[i]; 
count_page_fault++; 
} 
} 
printf("Number of Page hits are %lld\n", count_page_hit); 
printf("Number of Page faults are %lld\n", count_page_fault); 
return 0; 
} 
void showInputs(ll *virtual_memory_pages, ll no_of_pages, ll no_of_frames) 
{ 
printf("You have entered the following data...."); 
drawLine(); 
printf("Number of pages\t\t\t: %lld\n", no_of_pages); 
if(random_flag) printf("Random "); 
else printf("Custom "); 
printf("Virtual Memory Pages \t: "); 
for(int i = 0; i < no_of_pages; i++) 
printf("%lld ", virtual_memory_pages[i]); 
printf("\nNumber of frames\t\t: %lld", no_of_frames); 
drawLine(); 
} 
void drawLine() 
{ 
printf("\n"); 
for(int i = 0; i < 30; i++) 
printf("-"); 
printf("\n"); 
} 
