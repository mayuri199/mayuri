Q.22 
#include <stdio.h> 
#include <stdlib.h> 
#include <string.h> 
#include <time.h> 
#define debugi(x) printf("DEBUG : %d\n", x) 
#define FORN(i, n) for(__typeof(i) i = 0; i < n; i++) 
typedef long long ll; 
int random_flag = 0; //false 
void showInputs(ll *virtual_memory_pages, ll no_of_pages, ll no_of_frames); 
void drawLine(); 
int findPageHit(ll *frame_list, ll no_of_frames, ll target) 
{ 
for(int i = 0; i < no_of_frames; i++) 
{ 
if(frame_list[i] == target) 
return 1; 
} 
return 0; 
} 
void populatePages(ll *virtual_memory_pages, ll no_of_pages) 
{ 
// debugi(no_of_pages); 
for (int i = 0; i < no_of_pages; i++) 
virtual_memory_pages[i] = (rand() % 10); 
} 
int main(int argc, const char **argv) 
{ 
srand(time(NULL)); 
ll no_of_pages; 
ll *virtual_memory_pages; 
if(argc == 1) 
{ 
printf("Enter the number of pages in virtual memory "); 
scanf("%lld", &no_of_pages); 
virtual_memory_pages = (ll *)malloc(sizeof(ll) * no_of_pages); 
populatePages(virtual_memory_pages, no_of_pages); 
random_flag = 1; //true 
} 
else 
{ 
no_of_pages = argc - 1; 
virtual_memory_pages = (ll *)malloc(sizeof(ll) * no_of_pages); 
int index = 0; 
for(int i = 1; i < argc; i++) 
virtual_memory_pages[index++] = atoll(argv[i]); 
} 
